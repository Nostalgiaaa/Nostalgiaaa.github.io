<?xml version="1.0" encoding="utf-8"?>






<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>主页</title>
        <link>https://example.com/</link>
        <description>MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。</description>
        <generator>Hugo 0.70.0 https://gohugo.io/</generator>
        
            <language>zh-CN</language>
        
        
            <managingEditor>844255371@qq.com (Nostalgia)</managingEditor>
        
        
            <webMaster>844255371@qq.com (Nostalgia)</webMaster>
        
        
            <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
        
        <lastBuildDate>Thu, 30 Jul 2020 19:54:02 &#43;0800</lastBuildDate>
        
            <atom:link rel="self" type="application/rss&#43;xml" href="https://example.com/rss.xml" />
        
        
            <item>
                <title>Spam系统瞎想</title>
                <link>https://example.com/posts/spam%E7%B3%BB%E7%BB%9F%E7%9E%8E%E6%83%B3/</link>
                <guid isPermaLink="true">https://example.com/posts/spam%E7%B3%BB%E7%BB%9F%E7%9E%8E%E6%83%B3/</guid>
                <pubDate>Thu, 30 Jul 2020 18:43:41 &#43;0800</pubDate>
                
                    <author>844255371@qq.com (Nostalgia)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;p&gt;最近公司要重构spam系统，同事起的表名和变量名很脱戏。例如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;proof&lt;/li&gt;
&lt;li&gt;judgement&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;让我联想到了警察/法院/监狱这套体系。简单一想。这套模型对应 spam 还挺合适的，抽象无处不在。&lt;/p&gt;
&lt;h2 id=&#34;是否有罪&#34;&gt;是否有罪&lt;/h2&gt;
&lt;p&gt;首先是否有罪有两种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有罪推定&lt;/li&gt;
&lt;li&gt;无罪推定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有罪推定：用户产生的一切内容就是有罪的，除非有明确证据证明清白&lt;/p&gt;
&lt;p&gt;无罪推定：用户产生的内容就是好的，除非有明确证据证明该spam&lt;/p&gt;
&lt;p&gt;两种推定利弊需要通过实际情况来判断，有罪推定 spam 出现在公共区域的几率小，但是人工审核工作量增加，有一定几率冤假错案。无罪推定人工审核量会小一些，但是遇到大规模作案容易有漏网之鱼。&lt;/p&gt;
&lt;h2 id=&#34;组织结构&#34;&gt;组织结构&lt;/h2&gt;
&lt;p&gt;法院要独立于警察监狱体系，也就是要隔离开来。民警抓的犯人可以在法院审判，缉毒警察抓的犯人也可以在法院审判。&lt;/p&gt;
&lt;p&gt;监狱警察是同一套体系，警察负责把嫌疑人（用户生产内容）送到法院，此时根据有罪/无罪推定，让用户生产内容自由流通还是暂时被拘留候审。等到法院审判完成再由警察操作是释放还是投入监狱（封禁）&lt;/p&gt;
&lt;h2 id=&#34;具体架构&#34;&gt;具体架构&lt;/h2&gt;
&lt;p&gt;法院可以是一套单独的服务&lt;/p&gt;
&lt;p&gt;可以有如下功能：&lt;/p&gt;
&lt;h4 id=&#34;接受犯罪嫌疑人&#34;&gt;接受犯罪嫌疑人&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 接口接收如下信息 ：
 嫌疑人唯一凭证（用户内容全局唯一id）
 嫌疑人类型（不同的系统不同的类型）
 嫌疑人作案现场（用户生产的文本/图片/视频/用户行为）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;审判犯罪嫌疑人&#34;&gt;审判犯罪嫌疑人&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 根据不同的嫌疑人类型可以选择不同的法官或者陪审团
 陪审团（分类器，可以有第三方，或者算法根据业务特点所编写的）
 法官（审核人员）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;审判记录&#34;&gt;审判记录&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 记录所有陪审团/法官操作（记录分类器结果，审核人员操作）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;通知警察&#34;&gt;通知警察&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 把审判结果通知警察（回调方式通知、或者警察轮询法院）
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;审判结果记录&#34;&gt;审判结果记录&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 记录所有的审判结果
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;警察、监狱系统有如下功能&lt;/p&gt;
&lt;h4 id=&#34;押送嫌疑人&#34;&gt;押送嫌疑人&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 把嫌疑人包装好送到法院
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;获取审判结果&#34;&gt;获取审判结果&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 轮询法院或者开通回调
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;送监&#34;&gt;送监&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt; 根据审判结果放行或者屏蔽掉嫌疑人
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;实现&#34;&gt;实现&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;各个业务系统实现包装用户生产信息。&lt;/li&gt;
&lt;li&gt;把用户信息发送到法院（spam系统）。&lt;/li&gt;
&lt;li&gt;法院（spam系统）收到用户生产信息，根据用户类型选择不同的分类器，不同的审核人员。&lt;/li&gt;
&lt;li&gt;分类器把结果记录在审判记录里，审核人员通过后台读取所有待审核信息给出结果也写在审判记录里。&lt;/li&gt;
&lt;li&gt;从审判记录中读取所有没交还业务系统处理的记录。根据业务自定义的规则，比如分类器50%给出封禁就直接封禁，审核人员有一票否决权等等。&lt;/li&gt;
&lt;li&gt;把最后审判记录通过回调返还给业务系统&lt;/li&gt;
&lt;li&gt;如果有误判，可以通过查询审判结果记录来让业务系统重新放行或者屏蔽。&lt;/li&gt;
&lt;li&gt;业务系统收到审判结果，自行封禁或者放行。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;好处&#34;&gt;好处&lt;/h2&gt;
&lt;p&gt;法院只用负责分类器，人工审核部分，新增分类器或者人工审核规则都是业务系统不关心的，跟业务系统解耦开。&lt;/p&gt;
&lt;p&gt;所有不同的用户内容只要编写好发送接口，回调以及lock/unlock 方法就可以接入spam系统。&lt;/p&gt;
&lt;p&gt;有新业务线介入时，如果跟老业务内容类似，可以直接套用分类器规则。多个业务线可以共用一套审核团队。减少开发量，人力成本。&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/categories/%E6%8A%80%E6%9C%AF/">技术</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/spam/">spam</category>
                                
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/%E6%9E%B6%E6%9E%84/">架构</category>
                                
                            
                        
                    
                
            </item>
        
            <item>
                <title>Golang时区/mysql时间默认值问题问题</title>
                <link>https://example.com/posts/golang%E6%97%B6%E5%8C%BA%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8Agorm%E6%97%B6%E9%97%B4%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98/</link>
                <guid isPermaLink="true">https://example.com/posts/golang%E6%97%B6%E5%8C%BA%E9%97%AE%E9%A2%98%E4%BB%A5%E5%8F%8Agorm%E6%97%B6%E9%97%B4%E9%BB%98%E8%AE%A4%E5%80%BC%E7%9A%84%E9%97%AE%E9%A2%98/</guid>
                <pubDate>Mon, 15 Jun 2020 20:14:58 &#43;0800</pubDate>
                
                    <author>844255371@qq.com (Nostalgia)</author>
                
                <copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</copyright>
                
                    <description>&lt;p&gt;环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go：1.14&lt;/li&gt;
&lt;li&gt;gorm&lt;/li&gt;
&lt;li&gt;mysql&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最近在工作中使用 golang 时遇到了几个问题，具体如下：&lt;/p&gt;
&lt;p&gt;数据库中有一个数据表，其中有一个日期字段，需要把这个日期字段更新成指定日期。&lt;/p&gt;
&lt;p&gt;最开始的定义如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;kn&#34;&gt;package&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;dao&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;errors&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;github.com/jinzhu/gorm&amp;#34;&lt;/span&gt;
	&lt;span class=&#34;s&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;gorm&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Model&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;TestTime&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Time&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;`gorm:&amp;#34;index:test_time&amp;#34;`&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;伪代码&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;创建一条记录&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DAO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kd&#34;&gt;var&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Data&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;err&#34;&gt;#&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;伪代码&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;更新&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ID&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;为&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;记录的&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;test_time&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;字段&lt;/span&gt;
&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DAO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;UpdateDataLastedRevision&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;testTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Parse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;2006-01-02 15:04:05&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;2014-01-08 09:04:41&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Model&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ID = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Update&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;TestTime&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;testTime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;在本地测试一切正常，数据库数据正常运行，上到生产环境测试出现问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无法创建，Create函数不抛出任何错误，Create返回的data任何值都为空默认值&lt;/li&gt;
&lt;li&gt;更新之后 test_time 跟 2014-01-08 09:04:41 不是同一个时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###问题1：&lt;/p&gt;
&lt;p&gt;首先查看一下 Create 方法的签名&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Create insert the value into database
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{})&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
   &lt;span class=&#34;nx&#34;&gt;scope&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;NewScope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
   &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;scope&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;callCallbacks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;s&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;callbacks&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;creates&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;不会返回任何显式的错误信息，只返回一个指向 DB 的指针，说明这部分当 sql 执行错误时，只可能有两个方式抛出:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接抛出 panic&lt;/li&gt;
&lt;li&gt;函数内更改了 DB 的某些值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这里程序没有崩溃掉，很明显是第二种。查阅一下&lt;a href=&#34;https://jasperxu.github.io/gorm-zh/advanced.html&#34;&gt;文档&lt;/a&gt;，看到如下信息：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Where&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;name = ?&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;jinzhu&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Error&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;// 错误处理...
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;// 如果有多个错误发生，用`GetErrors`获取所有的错误，它返回`[]error`
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;db&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;First&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;user&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Limit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;users&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;GetErrors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;也就是必须显示的调用 &lt;strong&gt;.Error&lt;/strong&gt;  或者 &lt;strong&gt;GetErrors()&lt;/strong&gt; 才能获取到真正的错误信息。&lt;/p&gt;
&lt;p&gt;接下来，看到了如下错误：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;Incorrect&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;datetime&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;value&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;0000&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mo&#34;&gt;00&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;column&lt;/span&gt; &lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;test_time&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;为什么开发机不出现这种问题，生产环境反而出现了这种bug？首先先从边界开始处理：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;LogMode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;DB&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Debug&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Create&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;开启debug模式，查看两个环境是否最终执行 sql 是否完全相同，答案是肯定的，那么问题肯定出在了 mysql，首先查看 mysql 版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span class=&#34;k&#34;&gt;select&lt;/span&gt;  &lt;span class=&#34;k&#34;&gt;version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;都是 5.7.17,&lt;/p&gt;
&lt;p&gt;google 了一下错误，找到了答案 &lt;a href=&#34;https://stackoverflow.com/questions/35565128/mysql-incorrect-datetime-value-0000-00-00-000000/37780259&#34;&gt;stackoverflow&lt;/a&gt;，是开发服和生产服务器的 sql_mode 不一致&lt;/p&gt;
&lt;p&gt;开发服 sql_mode 为空， 生产环境如下：NO_ZERO_IN_DATE,NO_ZERO_DATE。禁止了写入空值到 mysql 里，问题就很明显了，修复方式有很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变 mysql sql_mode 设置&lt;/li&gt;
&lt;li&gt;gorm 显示定义默认值 如 DEFAULT:&#39;2000-01-01 00:00:00&#39;&lt;/li&gt;
&lt;li&gt;test_time值设定为空指针，字段会被设为 Null&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###问题二：&lt;/p&gt;
&lt;p&gt;sql 没有执行失败，只是插入语句里的时间不同，很明显是时区问题。&lt;/p&gt;
&lt;p&gt;time.Parse 我们指定的LayOut &amp;quot;2006-01-02 15:04:05&amp;quot; 没有指定时区，有如下几种解决方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;layout 改为指定时区的, 传入的日期字符串也得加上时区&lt;/li&gt;
&lt;li&gt;使用time.ParseInLocation(&amp;quot;2006-01-02 15:04:05&amp;quot;, testTime, time.Local)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;方法二比较简单，只要你的全部机房都在一个时区内就可以。&lt;/p&gt;
&lt;p&gt;附：LayOut 为什么是这串字符串 &lt;a href=&#34;https://golang.org/pkg/time/#example_Parse&#34;&gt;官方文档&lt;/a&gt; 或者直接查看time.Parse的实现方式就可以，跟golang的创建日期完全没有关系。&lt;/p&gt;
&lt;p&gt;##思考🤔&lt;/p&gt;
&lt;p&gt;在开发过程中，我发现了有三种错误处理方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;panic&lt;/li&gt;
&lt;li&gt;函数显示返回 err&lt;/li&gt;
&lt;li&gt;像gorm这种把错误置在一个变量里&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;错误不能统一的以一种方式捕捉，尤其是你用了第三方库。你不知道是函数返回，还是读某个变量。你不做任何操作，程序也能正确的跑下去。跟我们常做的防御式编程完全不同。
golang 还允许你&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;yourFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;忽视掉错误继续调用函数，这让我感觉不太适应。一些本可以在编码期间干掉的错误，反而会被程序员一些偷懒的操作暴露出来。第三方库不同的编码习惯，也让你不得不时刻提防。&lt;/p&gt;
&lt;p&gt;正常使用的话&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;nx&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;yourFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;会有四种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;result 为 nil, err 不为 nil&lt;/li&gt;
&lt;li&gt;result 为 nil, err 为 nil&lt;/li&gt;
&lt;li&gt;result 不为 nil, err 为 nil&lt;/li&gt;
&lt;li&gt;result 不为 nil, err 不为 nil&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;而拿我熟悉的python为例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;try&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;yourFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;except&lt;/span&gt; &lt;span class=&#34;ne&#34;&gt;Exception&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;只有两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;正确运行&lt;/li&gt;
&lt;li&gt;抛错，except 缩进里&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;希望官方2.0或者第三方库能让我们多一种选择吧。&lt;/p&gt;
</description>
                
                
                
                
                
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/categories/%E6%8A%80%E6%9C%AF/">技术</category>
                                
                            
                        
                    
                        
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/golang/">golang</category>
                                
                            
                                
                                
                                
                                    <category domain="https://example.com/tags/gorm/">gorm</category>
                                
                            
                        
                    
                
            </item>
        
    </channel>
</rss>
